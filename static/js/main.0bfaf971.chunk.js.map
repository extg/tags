{"version":3,"sources":["history.ts","App.tsx","localStorageEffect.ts","App2.tsx","routes.tsx","page1.tsx","page2.tsx","reportWebVitals.ts","index.tsx"],"names":["withQuery","parse","stringify","history","invariant","addSearch","location","search","query","length","charAt","addQuery","substring","listen","forEach","prop","hasOwnProperty","queryHistory","updateProperties","listener","action","isV5","queryLocation","push","state","replace","replaceQuery","currentLocation","hash","pathname","createHref","Object","defineProperty","get","Input","p","parseTags","tags","Array","isArray","toLocaleLowerCase","toLowerCase","split","filter","Boolean","App","value","cb","useState","inputA","setInputA","inputB","setInputB","isCopyied","setIsCopyied","handleChange","e","target","result","map","b","flatMap","a","join","handleClick","setTimeout","useCallback","event","stopPropagation","writeText","className","as","rows","variant","onChange","onClick","localStorageEffect","key","ovverides","setSelf","onSet","savedValue","localStorage","getItem","JSON","newValue","DefaultValue","removeItem","setItem","inputAState","atom","default","effects_UNSTABLE","inputBState","tagsState","tagsStateA","tagsStateB","resultState","Multiplexor","useRecoilState","setTags","tagsA","setTagsA","tagsB","setTagsB","setResult","resultStr","v","i","self","indexOf","React","useEffect","allTags","concat","handleChangeSelect","actionMeta","isMulti","closeMenuOnSelect","label","options","placeholder","tag","t","removeTag","routes","path","exact","component","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","console","log","qs","createBrowserHistorySource","ReactDOM","render","StrictMode","basename","Component","props","match","document","getElementById"],"mappings":"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","file":"static/js/main.0bfaf971.chunk.js","sourcesContent":["import invariant from 'invariant'\nimport qs from 'qs'\nimport { createBrowserHistory as createBrowserHistorySource } from 'history'\n\n// https://github.com/Hypnosphi/qhistory/blob/master/src/index.js\n// + add replaceQuery method\nconst withQuery = ({ parse, stringify }: any) => (history: any) => {\n  invariant(\n    typeof stringify === 'function',\n    'A stringify function is required in order to transform ' +\n      'query objects into search strings.'\n  )\n\n  invariant(\n    typeof parse === 'function',\n    'A parse function is required in order to transform ' +\n      'search strings into query objects.'\n  )\n\n  const addSearch = (location: any) => {\n    if (typeof location === 'object') {\n      let search = location.search || ''\n      if (location.query) {\n        search = stringify(location.query)\n        // Ensure leading \"?\" for non-empty search\n        if (search.length > 0 && search.charAt(0) !== '?') {\n          search = `?${search}`\n        }\n      }\n      return { ...location, search }\n    }\n\n    return location\n  }\n\n  const addQuery = (location: any) => {\n    const { search } = location\n    return {\n      ...location,\n      query: search\n        ? parse(search.charAt(0) === '?' ? search.substring(1) : search)\n        : {},\n    }\n  }\n\n  const updateProperties = (history: any) => {\n    const properties = ['length', 'entries', 'index', 'action']\n    properties.forEach((prop) => {\n      if (history.hasOwnProperty(prop)) {\n        queryHistory[prop] = history[prop]\n      }\n    })\n  }\n\n  // This relies on being the first listener called by\n  // the actual history instance. If you register a\n  // listener on the history instance before modifying\n  // it with qhistory, the location object will not have\n  // the query property set on it when that listener\n  // is called.\n  history.listen((location: any) => {\n    updateProperties(history)\n  })\n\n  const queryHistory = {\n    ...history,\n    listen: (listener: any) =>\n      history.listen((location: any, action: any) => {\n        const isV5 = location.location != null\n        if (isV5) {\n          action = location.action\n          location = location.location\n        }\n        const queryLocation = addQuery(location)\n        isV5\n          ? listener({ location: queryLocation, action })\n          : listener(queryLocation, action)\n      }),\n    push: (location: any, state: any) =>\n      history.push(addSearch(location), state),\n    replace: (location: any, state: any) =>\n      history.replace(addSearch(location), state),\n    // yep, this custom method\n    replaceQuery: (query: any, state: any) => {\n      const currentLocation = history.location\n\n      history.replace(\n        addSearch({\n          hash: currentLocation.hash,\n          pathname: currentLocation.pathname,\n          query,\n        }),\n        state\n      )\n    },\n    createHref: (location: any) => history.createHref(addSearch(location)),\n  }\n\n  Object.defineProperty(queryHistory, 'location', {\n    get: () => addQuery(history.location),\n  })\n\n  return queryHistory\n}\n\nexport const createBrowserHistory = () =>\n  withQuery(qs)(createBrowserHistorySource())\n","import React, {useState, useCallback} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { writeText } from 'clipboard-polyfill'\n\n\nfunction Input(p: any) {\n  return <textarea {...p}/>\n}\n\nexport function parseTags(tags: string | string[]): string[] {\n  if (Array.isArray(tags)) {\n    return tags\n  }\n\n  return (tags && typeof tags === 'string') ?\n    tags\n      .toLocaleLowerCase()\n      .toLowerCase()\n      .replace(/#?([a-zа-я_]+)/g, '$1')\n      .split(/\\s*,+\\s*|\\s+/g)\n      .filter(Boolean) :\n    []\n}\n\n\nexport const useClipboard = (value: any, cb: any) =>\n  useCallback(\n    (event) => {\n      event?.stopPropagation()\n\n      writeText(value)\n\n      cb && typeof cb === 'function' && cb(true)\n    },\n    [value]\n  )\n\nfunction App() {\n  const [inputA, setInputA] = useState('')\n  const [inputB, setInputB] = useState('')\n\n  const [isCopyied, setIsCopyied] = useState(false)\n\n  // @ts-expect-error\n  const handleChange = cb => e => cb(e.target.value)\n\n  const result = [\n    ...parseTags(inputA).map(b => `#${b}`),\n    ...parseTags(inputB).map(b => `#${b}`),\n    ...parseTags(inputA).flatMap(a => parseTags(inputB).map(b => `#${a}${b}`))\n  ].filter(Boolean).join(' ')\n\n  const handleClick = useClipboard(result, () => {\n    setIsCopyied(true)\n\n    setTimeout(() => setIsCopyied(false), 2000)\n  })\n\n  return (\n    <div className='App'>\n      <h2>#hashtags</h2>\n      <Input as='textarea' rows={3} variant='outline' value={inputA} onChange={handleChange(setInputA)} />\n      <Input as='textarea' rows={3} variant='outline' value={inputB} onChange={handleChange(setInputB)} />\n\n      <Input as='textarea' rows={10} value={result} variant='outline'/>\n\n      <button onClick={handleClick}>{!isCopyied ? 'Скопировать' : 'Скопировано'}</button>\n    </div>\n  )\n}\n\nexport default App;\n","import { DefaultValue, AtomEffect } from 'recoil'\n\nexport default function localStorageEffect<T>(\n  key: string,\n  ovverides?: T\n): AtomEffect<T> {\n  return function ({ setSelf, onSet }) {\n    const savedValue = localStorage.getItem(key)\n    if (savedValue != null) {\n      setSelf(JSON.parse(savedValue))\n    }\n\n    onSet((newValue) => {\n      if (newValue instanceof DefaultValue) {\n        localStorage.removeItem(key)\n      } else {\n        localStorage.setItem(key, JSON.stringify(newValue))\n      }\n    })\n  }\n}\n","import React, {useState, useCallback} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { writeText } from 'clipboard-polyfill'\nimport {\n  atom,\n  selector,\n  useRecoilState,\n  useSetRecoilState,\n  useRecoilValue,\n  RecoilRoot,\n} from 'recoil'\nimport CreatableSelect from 'react-select/creatable';\nimport Select from 'react-select'\n\nimport localStorageEffect from './localStorageEffect'\n\nconst inputAState = atom<string>({\n  key: 'inputA',\n  default: 'грузоперевозки, сборныйгруз, логистика',\n  effects_UNSTABLE: [localStorageEffect('__hashtags_input_a__')],\n})\n\nconst inputBState = atom<string>({\n  key: 'inputB',\n  default: 'тольятти, липецк',\n  effects_UNSTABLE: [localStorageEffect('__hashtags_input_b__')],\n})\n\nconst tagsState = atom<string[]>({\n  key: 'tags',\n  default: [],\n  effects_UNSTABLE: [localStorageEffect('__hashtags_tags__')],\n})\n\nconst tagsStateA = atom<string[]>({\n  key: 'tagsA',\n  default: [],\n  effects_UNSTABLE: [localStorageEffect('__hashtags_tags_a__')],\n})\n\n\nconst tagsStateB = atom<string[]>({\n  key: 'tagsB',\n  default: [],\n  effects_UNSTABLE: [localStorageEffect('__hashtags_tags_b__')],\n})\n\nconst resultState = atom<string>({\n  key: 'resultState',\n  default: '',\n  effects_UNSTABLE: [localStorageEffect('__hashtags_result__')],\n})\n\nfunction Input(p: any) {\n  return <textarea {...p}/>\n}\n\nexport function parseTags(tags: string | string[]): string[] {\n  if (Array.isArray(tags)) {\n    return tags.flatMap(parseTags)\n  }\n\n  return (tags && typeof tags === 'string') ?\n    tags\n      .toLocaleLowerCase()\n      .toLowerCase()\n      .replace(/#?([a-zа-я_]+)/g, '$1')\n      .split(/\\s*,+\\s*|\\s+/g)\n      .filter(Boolean) :\n    []\n}\n\nexport const useClipboard = (value: any, cb: any) =>\n  useCallback(\n    (event) => {\n      event?.stopPropagation()\n\n      writeText(value)\n\n      cb && typeof cb === 'function' && cb(true)\n    },\n    [value]\n  )\n\n\nfunction Multiplexor() {\n  const [inputA, setInputA] = useRecoilState(inputAState)\n  const [inputB, setInputB] = useRecoilState(inputBState)\n  const [tags, setTags] = useRecoilState(tagsState)\n  const [tagsA, setTagsA] = useRecoilState(tagsStateA)\n  const [tagsB, setTagsB] = useRecoilState(tagsStateB)\n  const [result, setResult] = useRecoilState(resultState)\n\n  const [isCopyied, setIsCopyied] = useState(false)\n\n  const resultStr = [\n    ...parseTags(tagsA).map(b => `#${b}`),\n    ...parseTags(tagsB).map(b => `#${b}`),\n    ...parseTags(tagsA).flatMap(a => parseTags(tagsB).map(b => `#${a}${b}`))\n  ].filter(Boolean).filter((v, i, self) => self.indexOf(v) === i).join(' ')\n\n  React.useEffect(() => {\n    setTags(allTags => allTags.concat(parseTags([...tagsA, ...tagsB])).filter((v, i, self) => self.indexOf(v) === i))\n  }, [tagsA, tagsB]);\n\n  React.useEffect(() => {\n    setResult(resultStr)\n  }, [resultStr]);\n\n  const handleClick = useClipboard(result, () => {\n    setIsCopyied(true)\n\n    setTimeout(() => setIsCopyied(false), 3000)\n  })\n\n  const handleChangeSelect = (cb: any) => (newValue: any, actionMeta: any) => {\n    cb(newValue ? newValue.map((i: any) => i.value) : [])\n  };\n\n  const handleChangeResult = (e: any) => setResult(e.target.value)\n\n  const removeTag = (tag: string) => {\n    setTags(allTags => allTags.filter(t => t !== tag))\n  }\n\n  const handleReset = () => {\n    setTagsA([])\n    setTagsB([])\n  }\n\n  return (\n    <RecoilRoot>\n      <div className='App'>\n        <h1>#hashtags</h1>\n        <CreatableSelect\n          isMulti\n          closeMenuOnSelect={false}\n          value={parseTags(tagsA).map(value => ({ label: value, value}))}\n          onChange={handleChangeSelect(setTagsA)}\n          options={tags.map(value => ({ label: value, value}))}\n          placeholder=''\n        />\n        <br/>\n        <CreatableSelect\n          isMulti\n          closeMenuOnSelect={false}\n          value={parseTags(tagsB).map(value => ({ label: value, value}))}\n          onChange={handleChangeSelect(setTagsB)}\n          options={tags.map(value => ({ label: value, value}))}\n          placeholder=''\n        />\n      <br/>\n      <button onClick={handleReset}>Сбросить</button>\n        {/*\n        <Input as='textarea' rows={3} variant='outline' value={inputA} onChange={handleChange(setInputA)} />\n        <Input as='textarea' rows={3} variant='outline' value={inputB} onChange={handleChange(setInputB)} />\n        */}\n\n        <Input as='textarea' rows={10} value={result} onChange={handleChangeResult} variant='outline'/>\n\n        <button onClick={handleClick}>{!isCopyied ? 'Скопировать' : 'Скопировано'}</button>\n\n        <div className=\"tags\">\n          {tags.map(tag => (\n            <span className=\"tag\" onClick={() => removeTag(tag)}>{tag}</span>\n          ))}\n        </div>\n      </div>\n    </RecoilRoot>\n  )\n}\n\nfunction App() {\n  return (\n    <RecoilRoot>\n      <Multiplexor/>\n    </RecoilRoot>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\n// import { ReactComponent as PeopleOutlineIcon } from 'ionicons/dist/svg/people-outline.svg'\n// import { ReactComponent as LibraryOutlineIcon } from 'ionicons/dist/svg/library-outline.svg'\n// import { ReactComponent as FlameOutlineIcon } from 'ionicons/dist/svg/flame-outline.svg'\n// import { ReactComponent as ServerOutlineIcon } from 'ionicons/dist/svg/server-outline.svg'\n// import { ReactComponent as AlbumsOutlineIcon } from 'ionicons/dist/svg/albums-outline.svg'\n// import { ReactComponent as PersonOutlineIcon } from 'ionicons/dist/svg/person-outline.svg'\n// import { ReactComponent as DocumentTextOutlineIcon } from 'ionicons/dist/svg/document-text-outline.svg'\n// import { ReactComponent as ReceiptOutlineIcon } from 'ionicons/dist/svg/receipt-outline.svg'\n// import { ReactComponent as LogoGithubIcon } from 'ionicons/dist/svg/logo-github.svg'\n// import { ReactComponent as GridOutlineIcon } from 'ionicons/dist/svg/grid-outline.svg'\n// import { ReactComponent as CubeOutlineIcon } from 'ionicons/dist/svg/cube-outline.svg'\n// import { ReactComponent as GitBranchOutlineIcon } from 'ionicons/dist/svg/git-branch-outline.svg'\n// import { ReactComponent as CartOutlineIcon } from 'ionicons/dist/svg/cart-outline.svg'\n// import { ReactComponent as WarningOutlineIcon } from 'ionicons/dist/svg/warning-outline.svg'\n\nimport Page1 from './page1'\nimport Page2 from './page2'\n\nconst routes = [\n  // {\n  //   path: '/',\n  //   exact: true,\n  //   component: Redirect,\n  //   to: '/dashboard',\n  // },\n  {\n    path: '/',\n    exact: true,\n    component: Page1,\n  },\n  {\n    path: '/v2',\n    exact: true,\n    component: Page2,\n  },\n]\n\nexport default routes\n","import React from 'react'\n\nimport Multiplexor1 from './App'\n\nexport default function Page1() {\n  return <Multiplexor1/>\n}\n","import React from 'react'\n\nimport Multiplexor2 from './App2'\n\nexport default function Page2() {\n  return <Multiplexor2/>\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Router, HashRouter, Route, Switch } from 'react-router-dom'\n\nimport { createBrowserHistory } from './history'\nimport routes from './routes'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nconsole.log('app init')\n\nconst history = createBrowserHistory()\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename='/tags'>\n      <Switch>\n        {routes.map(\n          ({ component: Component, path, exact, ...props }: any, i: any) => (\n            <Route key={`route--${i}`} path={path} exact={exact}>\n              {({ match, history, location }: any) => {\n                return (\n                  <Component\n                    match={match}\n                    history={history}\n                    location={location}\n                    {...props}\n                  />\n                )\n              }}\n            </Route>\n          )\n        )}\n      </Switch>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}